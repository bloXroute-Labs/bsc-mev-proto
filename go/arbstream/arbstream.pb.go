// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: arbstream.proto

package arbstream

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	Transactions    []*Transaction          `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	State           map[string]*StateChange `protobuf:"bytes,2,rep,name=state,proto3" json:"state,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // State changes
	IsArbTx         bool                    `protobuf:"varint,3,opt,name=isArbTx,proto3" json:"isArbTx,omitempty"`
	BackrunmeConfig []string                `protobuf:"bytes,4,rep,name=backrunmeConfig,proto3" json:"backrunmeConfig,omitempty"`
	BundleHash      string                  `protobuf:"bytes,5,opt,name=bundleHash,proto3" json:"bundleHash,omitempty"`
	AccountId       string                  `protobuf:"bytes,6,opt,name=accountId,proto3" json:"accountId,omitempty"`
	OriginHostName  string                  `protobuf:"bytes,7,opt,name=originHostName,proto3" json:"originHostName,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_arbstream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_arbstream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_arbstream_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Order) GetState() map[string]*StateChange {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Order) GetIsArbTx() bool {
	if x != nil {
		return x.IsArbTx
	}
	return false
}

func (x *Order) GetBackrunmeConfig() []string {
	if x != nil {
		return x.BackrunmeConfig
	}
	return nil
}

func (x *Order) GetBundleHash() string {
	if x != nil {
		return x.BundleHash
	}
	return ""
}

func (x *Order) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Order) GetOriginHostName() string {
	if x != nil {
		return x.OriginHostName
	}
	return ""
}

type StateChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slots         map[string]string      `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateChange) Reset() {
	*x = StateChange{}
	mi := &file_arbstream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChange) ProtoMessage() {}

func (x *StateChange) ProtoReflect() protoreflect.Message {
	mi := &file_arbstream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChange.ProtoReflect.Descriptor instead.
func (*StateChange) Descriptor() ([]byte, []int) {
	return file_arbstream_proto_rawDescGZIP(), []int{1}
}

func (x *StateChange) GetSlots() map[string]string {
	if x != nil {
		return x.Slots
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	TxContents    *TxContents            `protobuf:"bytes,2,opt,name=txContents,proto3" json:"txContents,omitempty"`
	LocalRegion   bool                   `protobuf:"varint,3,opt,name=localRegion,proto3" json:"localRegion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_arbstream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_arbstream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_arbstream_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *Transaction) GetTxContents() *TxContents {
	if x != nil {
		return x.TxContents
	}
	return nil
}

func (x *Transaction) GetLocalRegion() bool {
	if x != nil {
		return x.LocalRegion
	}
	return false
}

type TxContents struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	From             string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Gas              string                 `protobuf:"bytes,2,opt,name=gas,proto3" json:"gas,omitempty"`
	GasPrice         string                 `protobuf:"bytes,3,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	Hash             string                 `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	Input            string                 `protobuf:"bytes,5,opt,name=input,proto3" json:"input,omitempty"`
	Nonce            string                 `protobuf:"bytes,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Value            string                 `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Type             string                 `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	To               string                 `protobuf:"bytes,9,opt,name=to,proto3" json:"to,omitempty"`
	FunctionSelector string                 `protobuf:"bytes,10,opt,name=functionSelector,proto3" json:"functionSelector,omitempty"`
	Logs             []*Log                 `protobuf:"bytes,11,rep,name=logs,proto3" json:"logs,omitempty"`
	GasTipCap        string                 `protobuf:"bytes,12,opt,name=gasTipCap,proto3" json:"gasTipCap,omitempty"`
	GasFeeCap        string                 `protobuf:"bytes,13,opt,name=gasFeeCap,proto3" json:"gasFeeCap,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TxContents) Reset() {
	*x = TxContents{}
	mi := &file_arbstream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxContents) ProtoMessage() {}

func (x *TxContents) ProtoReflect() protoreflect.Message {
	mi := &file_arbstream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxContents.ProtoReflect.Descriptor instead.
func (*TxContents) Descriptor() ([]byte, []int) {
	return file_arbstream_proto_rawDescGZIP(), []int{3}
}

func (x *TxContents) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TxContents) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

func (x *TxContents) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *TxContents) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TxContents) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TxContents) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *TxContents) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TxContents) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TxContents) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TxContents) GetFunctionSelector() string {
	if x != nil {
		return x.FunctionSelector
	}
	return ""
}

func (x *TxContents) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *TxContents) GetGasTipCap() string {
	if x != nil {
		return x.GasTipCap
	}
	return ""
}

func (x *TxContents) GetGasFeeCap() string {
	if x != nil {
		return x.GasFeeCap
	}
	return ""
}

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Topics        []string               `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_arbstream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_arbstream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_arbstream_proto_rawDescGZIP(), []int{4}
}

func (x *Log) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Log) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Log) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type StreamRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestData     string                 `protobuf:"bytes,1,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"` // defaults to "all"
	IncludeNonArbTx bool                   `protobuf:"varint,2,opt,name=includeNonArbTx,proto3" json:"includeNonArbTx,omitempty"`           //defaults to false
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_arbstream_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbstream_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_arbstream_proto_rawDescGZIP(), []int{5}
}

func (x *StreamRequest) GetRequestData() string {
	if x != nil {
		return x.RequestData
	}
	return ""
}

func (x *StreamRequest) GetIncludeNonArbTx() bool {
	if x != nil {
		return x.IncludeNonArbTx
	}
	return false
}

var File_arbstream_proto protoreflect.FileDescriptor

const file_arbstream_proto_rawDesc = "" +
	"\n" +
	"\x0farbstream.proto\x12\x1fcom.bloxroute.bsc.mev.arbstream\"\xb4\x03\n" +
	"\x05Order\x12P\n" +
	"\ftransactions\x18\x01 \x03(\v2,.com.bloxroute.bsc.mev.arbstream.TransactionR\ftransactions\x12G\n" +
	"\x05state\x18\x02 \x03(\v21.com.bloxroute.bsc.mev.arbstream.Order.StateEntryR\x05state\x12\x18\n" +
	"\aisArbTx\x18\x03 \x01(\bR\aisArbTx\x12(\n" +
	"\x0fbackrunmeConfig\x18\x04 \x03(\tR\x0fbackrunmeConfig\x12\x1e\n" +
	"\n" +
	"bundleHash\x18\x05 \x01(\tR\n" +
	"bundleHash\x12\x1c\n" +
	"\taccountId\x18\x06 \x01(\tR\taccountId\x12&\n" +
	"\x0eoriginHostName\x18\a \x01(\tR\x0eoriginHostName\x1af\n" +
	"\n" +
	"StateEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12B\n" +
	"\x05value\x18\x02 \x01(\v2,.com.bloxroute.bsc.mev.arbstream.StateChangeR\x05value:\x028\x01\"\x96\x01\n" +
	"\vStateChange\x12M\n" +
	"\x05slots\x18\x01 \x03(\v27.com.bloxroute.bsc.mev.arbstream.StateChange.SlotsEntryR\x05slots\x1a8\n" +
	"\n" +
	"SlotsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x01\n" +
	"\vTransaction\x12\x16\n" +
	"\x06txHash\x18\x01 \x01(\tR\x06txHash\x12K\n" +
	"\n" +
	"txContents\x18\x02 \x01(\v2+.com.bloxroute.bsc.mev.arbstream.TxContentsR\n" +
	"txContents\x12 \n" +
	"\vlocalRegion\x18\x03 \x01(\bR\vlocalRegion\"\xea\x02\n" +
	"\n" +
	"TxContents\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x10\n" +
	"\x03gas\x18\x02 \x01(\tR\x03gas\x12\x1a\n" +
	"\bgasPrice\x18\x03 \x01(\tR\bgasPrice\x12\x12\n" +
	"\x04hash\x18\x04 \x01(\tR\x04hash\x12\x14\n" +
	"\x05input\x18\x05 \x01(\tR\x05input\x12\x14\n" +
	"\x05nonce\x18\x06 \x01(\tR\x05nonce\x12\x14\n" +
	"\x05value\x18\a \x01(\tR\x05value\x12\x12\n" +
	"\x04type\x18\b \x01(\tR\x04type\x12\x0e\n" +
	"\x02to\x18\t \x01(\tR\x02to\x12*\n" +
	"\x10functionSelector\x18\n" +
	" \x01(\tR\x10functionSelector\x128\n" +
	"\x04logs\x18\v \x03(\v2$.com.bloxroute.bsc.mev.arbstream.LogR\x04logs\x12\x1c\n" +
	"\tgasTipCap\x18\f \x01(\tR\tgasTipCap\x12\x1c\n" +
	"\tgasFeeCap\x18\r \x01(\tR\tgasFeeCap\"K\n" +
	"\x03Log\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06topics\x18\x02 \x03(\tR\x06topics\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\"\\\n" +
	"\rStreamRequest\x12!\n" +
	"\frequest_data\x18\x01 \x01(\tR\vrequestData\x12(\n" +
	"\x0fincludeNonArbTx\x18\x02 \x01(\bR\x0fincludeNonArbTx2|\n" +
	"\x0fArbStreamServer\x12i\n" +
	"\rStreamArbData\x12..com.bloxroute.bsc.mev.arbstream.StreamRequest\x1a&.com.bloxroute.bsc.mev.arbstream.Order0\x01B6Z4github.com/bloXroute-Labs/bsc-mev-proto/go/arbstreamb\x06proto3"

var (
	file_arbstream_proto_rawDescOnce sync.Once
	file_arbstream_proto_rawDescData []byte
)

func file_arbstream_proto_rawDescGZIP() []byte {
	file_arbstream_proto_rawDescOnce.Do(func() {
		file_arbstream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_arbstream_proto_rawDesc), len(file_arbstream_proto_rawDesc)))
	})
	return file_arbstream_proto_rawDescData
}

var file_arbstream_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_arbstream_proto_goTypes = []any{
	(*Order)(nil),         // 0: com.bloxroute.bsc.mev.arbstream.Order
	(*StateChange)(nil),   // 1: com.bloxroute.bsc.mev.arbstream.StateChange
	(*Transaction)(nil),   // 2: com.bloxroute.bsc.mev.arbstream.Transaction
	(*TxContents)(nil),    // 3: com.bloxroute.bsc.mev.arbstream.TxContents
	(*Log)(nil),           // 4: com.bloxroute.bsc.mev.arbstream.Log
	(*StreamRequest)(nil), // 5: com.bloxroute.bsc.mev.arbstream.StreamRequest
	nil,                   // 6: com.bloxroute.bsc.mev.arbstream.Order.StateEntry
	nil,                   // 7: com.bloxroute.bsc.mev.arbstream.StateChange.SlotsEntry
}
var file_arbstream_proto_depIdxs = []int32{
	2, // 0: com.bloxroute.bsc.mev.arbstream.Order.transactions:type_name -> com.bloxroute.bsc.mev.arbstream.Transaction
	6, // 1: com.bloxroute.bsc.mev.arbstream.Order.state:type_name -> com.bloxroute.bsc.mev.arbstream.Order.StateEntry
	7, // 2: com.bloxroute.bsc.mev.arbstream.StateChange.slots:type_name -> com.bloxroute.bsc.mev.arbstream.StateChange.SlotsEntry
	3, // 3: com.bloxroute.bsc.mev.arbstream.Transaction.txContents:type_name -> com.bloxroute.bsc.mev.arbstream.TxContents
	4, // 4: com.bloxroute.bsc.mev.arbstream.TxContents.logs:type_name -> com.bloxroute.bsc.mev.arbstream.Log
	1, // 5: com.bloxroute.bsc.mev.arbstream.Order.StateEntry.value:type_name -> com.bloxroute.bsc.mev.arbstream.StateChange
	5, // 6: com.bloxroute.bsc.mev.arbstream.ArbStreamServer.StreamArbData:input_type -> com.bloxroute.bsc.mev.arbstream.StreamRequest
	0, // 7: com.bloxroute.bsc.mev.arbstream.ArbStreamServer.StreamArbData:output_type -> com.bloxroute.bsc.mev.arbstream.Order
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_arbstream_proto_init() }
func file_arbstream_proto_init() {
	if File_arbstream_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_arbstream_proto_rawDesc), len(file_arbstream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_arbstream_proto_goTypes,
		DependencyIndexes: file_arbstream_proto_depIdxs,
		MessageInfos:      file_arbstream_proto_msgTypes,
	}.Build()
	File_arbstream_proto = out.File
	file_arbstream_proto_goTypes = nil
	file_arbstream_proto_depIdxs = nil
}
